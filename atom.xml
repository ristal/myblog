<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[珠箔飘灯独自归]]></title>
  <subtitle><![CDATA[程序媛，爱生活，爱汉服，爱武侠]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://ristal90.info/"/>
  <updated>2015-01-30T10:19:57.464Z</updated>
  <id>http://ristal90.info/</id>
  
  <author>
    <name><![CDATA[ristal]]></name>
    <email><![CDATA[ristal90@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[$$hashKey问题]]></title>
    <link href="http://ristal90.info/2015/01/30/$$hashKey%E9%97%AE%E9%A2%98/"/>
    <id>http://ristal90.info/2015/01/30/$$hashKey问题/</id>
    <published>2015-01-30T09:44:04.000Z</published>
    <updated>2015-01-30T09:48:04.000Z</updated>
    <content type="html"><![CDATA[<p>AngularJS adds $$hashKey property on objects listed in a ng-repeat directive.<br>chrome浏览器下$http不会默认去除$hashkey属性，需手动去除，用angular.copy()方法<br>data = angular.copy(source);</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>AngularJS adds $$hashKey property on objects listed in a ng-repeat directive.<br>chrome浏览器下$http不会默认去除$hashkey属性，需手动去除，用angular.copy()方法<]]>
    </summary>
    
      <category term="AngularJS" scheme="http://ristal90.info/tags/AngularJS/"/>
    
      <category term="WEB前端" scheme="http://ristal90.info/tags/WEB%E5%89%8D%E7%AB%AF/"/>
    
      <category term="AngularJS" scheme="http://ristal90.info/categories/AngularJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Angular_Scope_Inheritance]]></title>
    <link href="http://ristal90.info/2015/01/30/Angular-Scope-Inheritance/"/>
    <id>http://ristal90.info/2015/01/30/Angular-Scope-Inheritance/</id>
    <published>2015-01-30T09:28:52.000Z</published>
    <updated>2015-01-30T09:43:10.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Angular_Scope_Inheritance">Angular Scope Inheritance</h2>
<p>The contenders:<br>The following create new scopes, and inherit prototypically: <strong>ng-repeat, ng-include, ng-switch, ng-controller, directive with scope: true, directive with transclude: true.</strong><br>The following creates a new scope which does not inherit prototypically: directive with scope: { … }. This creates an “isolate” scope instead.<br>Note, by default, directives do not create new scope — i.e., the default is scope: false.</p>
<h2 id="angular_作用域:">angular 作用域:</h2>
<p>ng-repeat, ng-switch, ng-view 和 ng-include 统统都创建了他们新的子 scopes，<br>所以在用到这些 directive 时也经常出问题</p>
<h2 id="解决的办法">解决的办法</h2>
<p>解决的办法就是不使用基本数据类型，而在 Model 里永远多加一个点.<br>使用</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">"text"</span> ng-model=<span class="string">"someObj.prop1"</span>&gt;</div></pre></td></tr></table></figure>

<p>来替代</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">"text"</span> ng-model=<span class="string">"prop1"</span>&gt;</div></pre></td></tr></table></figure>

<p>但是我真的确实十分很非常需要使用 string number 等原始数据类型怎么办呢？2 个方法——<br>在子 Scope 中使用 $parent.parentPrimitive。 这将阻止子 Scope 创建它自己的属性。<br>在父 Scope 中定义一个函数，让子 Scope 调用，传递原始数据类型的参数给父亲，从而更新父 Scope 中的属性。（并不总是可行）</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Angular_Scope_Inheritance">Angular Scope Inheritance</h2>
<p>The contenders:<br>The following create new scopes, and inherit prototy]]>
    </summary>
    
      <category term="AngularJS" scheme="http://ristal90.info/tags/AngularJS/"/>
    
      <category term="WEB前端" scheme="http://ristal90.info/tags/WEB%E5%89%8D%E7%AB%AF/"/>
    
      <category term="AngularJS" scheme="http://ristal90.info/categories/AngularJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JavaScript的原型链继承]]></title>
    <link href="http://ristal90.info/2015/01/30/JavaScript%E7%9A%84%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF/"/>
    <id>http://ristal90.info/2015/01/30/JavaScript的原型链继承/</id>
    <published>2015-01-30T08:48:30.000Z</published>
    <updated>2015-01-30T09:27:30.000Z</updated>
    <content type="html"><![CDATA[<p>首先申明，非原创，笔记里翻出来的。<br>假设父类 parentScope 有如下成员属性 aString, aNumber, anArray, anObject, 以及 aFunction。子类 childScope 原型继承父类 parentScope，于是我们有：</p>
<p>如果子 Scope 尝试去访问 parentScope 中定义的属性，JavaScript 会先在子 Scope 中查找，如果没有该属性，则找它继承的 scope 去获取属性，如果继承的原型对象 parentScope 中都没有该属性，那么继续在它的原型中寻找，从原型链一直往上直到到达 rootScope。所以，下面的表达式结果都是 ture：<br>childScope.aString === ‘parent string’<br>childScope.anArray[1] === 20<br>childScope.anObject.property1 === ‘parent prop1’<br>childScope.aFunction() === ‘parent output’<br>假设我们执行下面的语句<br>childScope.aString = ‘child string’<br>原型链并没有被查询，反而是在 childScope 中增加了一个新属性 aString。这个新属性隐藏（覆盖）了 parentScope 中的同名属性。在下面我们讨论 ng-repeat 和 ng-include 时这个概念很重要。</p>
<p>假设我们执行这个操作：<br>childScope.anArray[1] = ‘22’<br>childScope.anObject.property1 = ‘child prop1’<br>原型链被查询了，因为对象 anArray 和 anObject 在 childScope 中没有找到。它们在 parentScope 中被找到了，并且值被更新。childScope 中没有增加新的属性，也没有任何新的对象被创建。（注：在 JavaScript 中，array 和 function 都是对象）</p>
<p>假设我们执行这个操作：<br>childScope.anArray = [100, 555]<br>childScope.anObject = { name: ‘Mark’, country: ‘USA’ }<br>原型链没有被查询，并且子 Scope 新加入了两个新的对象属性，它们隐藏（覆盖）了 parentScope 中的同名对象属性。</p>
<p>应该可以总结<br>如果读取 childScope.propertyX，并且 childScope 有属性 propertyX，那么原型链没有被查询。<br>如果设置 childScope.propertyX，原型链不会被查询。<br>最后一种情况，<br>delete childScope.anArray<br>childScope.anArray[1] === 22  // true<br>我们从 childScope 删除了属性，则当我们再次访问该属性时，原型链会被查询。删除对象的属性会让来自原型链中的属性浮现出来。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先申明，非原创，笔记里翻出来的。<br>假设父类 parentScope 有如下成员属性 aString, aNumber, anArray, anObject, 以及 aFunction。子类 childScope 原型继承父类 parentScope，于是我们有：</]]>
    </summary>
    
      <category term="JavaScript" scheme="http://ristal90.info/tags/JavaScript/"/>
    
      <category term="WEB前端" scheme="http://ristal90.info/tags/WEB%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://ristal90.info/categories/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Node.js工具]]></title>
    <link href="http://ristal90.info/2015/01/30/Node-js%E5%B7%A5%E5%85%B7/"/>
    <id>http://ristal90.info/2015/01/30/Node-js工具/</id>
    <published>2015-01-30T08:41:09.000Z</published>
    <updated>2015-01-30T08:45:14.000Z</updated>
    <content type="html"><![CDATA[<p>Nodejs领域:</p>
<blockquote>
<ul>
<li>Jasmine做单元测试，</li>
<li>Karma自动化完成单元测试，</li>
<li>Grunt启动Karma统一项目管理，</li>
<li>Yeoman最后封装成一个项目原型模板，</li>
<li>npm做nodejs的包依赖管理，</li>
<li>bower做javascript的包依赖管理</li>
</ul>
</blockquote>
<p>AngularJS项目这都是标配了吧。看看就好，可能好多同学每天都在用着却没注意吧</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Nodejs领域:</p>
<blockquote>
<ul>
<li>Jasmine做单元测试，</li>
<li>Karma自动化完成单元测试，</li>
<li>Grunt启动Karma统一项目管理，</li>
<li>Yeoman最后封装成一个项目原型模板，</li]]>
    </summary>
    
      <category term="nodejs" scheme="http://ristal90.info/tags/nodejs/"/>
    
      <category term="WEB前端" scheme="http://ristal90.info/tags/WEB%E5%89%8D%E7%AB%AF/"/>
    
      <category term="nodejs" scheme="http://ristal90.info/categories/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[angular-datatables使用]]></title>
    <link href="http://ristal90.info/2015/01/29/angular-datatables%E4%BD%BF%E7%94%A8/"/>
    <id>http://ristal90.info/2015/01/29/angular-datatables使用/</id>
    <published>2015-01-29T08:10:59.000Z</published>
    <updated>2015-01-30T08:08:46.000Z</updated>
    <content type="html"><![CDATA[<p>项目里面绝对少不了的就是列表了。列表就得翻页吧，还得搜索，排序吧。Angular自带了个ng-grid，但我用的是<a href="https://github.com/l-lin" target="_blank" rel="external">l-lin</a>同学写的angular-datatables,墙裂推荐！</p>
<p>具体上复杂点的例子吧，server side processing + bind angular directive,我的复杂度就到这了。</p>
<h2 id="1-bower安装">1.bower安装</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bower <span class="operator"><span class="keyword">install</span> angular-datatables</span></div></pre></td></tr></table></figure>

<h2 id="2-index-html中添加以下js文件：">2.index.html中添加以下js文件：</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"jquery.min.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"jquery.dataTables.min.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"angular.min.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"angular-datatables.min.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></div></pre></td></tr></table></figure>

<p>如果想要bootstrap效果,添加以下css：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;link <span class="variable">href=</span><span class="string">"datatables.bootstrap.min.css"</span> <span class="variable">rel=</span><span class="string">"stylesheet"</span>&gt;</div></pre></td></tr></table></figure>

<h2 id="3-在app-js中注入datatables模块：">3.在app.js中注入datatables模块：</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">angular.<span class="keyword">module</span>(<span class="string">'myModule'</span>, [<span class="string">'datatables'</span>]);</div></pre></td></tr></table></figure>

<h2 id="4-接下来就可以使用啦">4.接下来就可以使用啦</h2>
<h3 id="ui-router:详细用法请参考另一篇：ui-router">ui-router:详细用法请参考另一篇：<a href="http://ristal90.info/2015/01/28/ui-router%E4%BD%BF%E7%94%A8/" target="_blank" rel="external">ui-router</a></h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$stateProvider</span>.<span class="keyword">state</span>(<span class="string">'userlist'</span>, {</div><div class="line">     url:<span class="string">'userList'</span>,</div><div class="line">     templateUrl: <span class="string">'userList.html'</span>,</div><div class="line">     controller:<span class="string">'UserListCtrl'</span></div><div class="line"> })</div></pre></td></tr></table></figure>

<h3 id="userList-html中：">userList.html中：</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;table datatable  <span class="pseudo">dt</span>-options=<span class="string">"dtOptions"</span> <span class="pseudo">dt</span>-columns=<span class="string">"dtColumns"</span>&gt;</div></pre></td></tr></table></figure>

<h3 id="UserListCtrl中：">UserListCtrl中：</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line">angular.module(<span class="string">'p2pWeb1020App.controllers'</span>)</div><div class="line"><span class="comment">/***</span></div><div class="line"> * 用户管理列表:</div><div class="line"> * 1.基本信息</div><div class="line"> * 2.账户信息</div><div class="line"> * 3.删除</div><div class="line"> * author ristal</div><div class="line"> * 2014-12-01</div><div class="line"> ***/</div><div class="line">    .controller(<span class="string">'UserListCtrl'</span>,[<span class="string">'$rootScope'</span>,<span class="string">'$scope'</span>,<span class="string">'$compile'</span>,<span class="string">'DTOptionsBuilder'</span>,<span class="string">'DTColumnBuilder'</span>,<span class="string">'$location'</span>, <span class="string">'userFactory'</span>, <span class="string">'urlBase'</span>,<span class="string">'$modal'</span>,<span class="string">'alertService'</span>,<span class="function"><span class="keyword">function</span> <span class="params">(<span class="variable">$rootScope</span>,<span class="variable">$scope</span>,<span class="variable">$compile</span>,DTOptionsBuilder,DTColumnBuilder,<span class="variable">$location</span>,userFactory,urlBase,<span class="variable">$modal</span>,alertService)</span> </span>{</div><div class="line"></div><div class="line">        <span class="comment">//新增客户</span></div><div class="line">        <span class="variable">$scope</span>.userAdd = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</div><div class="line">            <span class="variable">$location</span>.path(<span class="string">'/userAdd'</span>);</div><div class="line">        }</div><div class="line"></div><div class="line">        <span class="variable">$scope</span>.editInfo = <span class="function"><span class="keyword">function</span><span class="params">(id)</span> </span>{</div><div class="line">            console.log(id);</div><div class="line">            <span class="comment">//1.location方式</span></div><div class="line">            <span class="variable">$location</span>.path(<span class="string">'/user/'</span>+id);</div><div class="line">            <span class="comment">//2. state方式</span></div><div class="line">            <span class="comment">//or $state.go("userInfo",{ userId: id });</span></div><div class="line">        };</div><div class="line">        <span class="variable">$scope</span>.editAccount = <span class="function"><span class="keyword">function</span><span class="params">(id)</span> </span>{</div><div class="line">            console.log(id);</div><div class="line">            <span class="variable">$location</span>.path(<span class="string">'/account/'</span>+id);</div><div class="line">        };</div><div class="line">        <span class="variable">$scope</span>.delete = <span class="function"><span class="keyword">function</span> <span class="params">(userId,userName)</span> </span>{</div><div class="line"></div><div class="line">            <span class="keyword">var</span> modalInstance = <span class="variable">$modal</span>.open({</div><div class="line">                templateUrl: <span class="string">'delUser.html'</span>,</div><div class="line">                controller: <span class="string">'delUsertModalCtrl'</span>,</div><div class="line">                size: <span class="string">''</span>,</div><div class="line">                resolve: {</div><div class="line">                    userId: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</div><div class="line">                        <span class="keyword">return</span> userId;</div><div class="line">                    },</div><div class="line">                    userName: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</div><div class="line">                        <span class="keyword">return</span> userName;</div><div class="line">                    }</div><div class="line">                }</div><div class="line">            });</div><div class="line"></div><div class="line">            modalInstance.result.then(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</div><div class="line">                alertService.addAlert(<span class="string">"success"</span>,<span class="string">"删除用户成功!"</span>);</div><div class="line">            }, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</div><div class="line">                alertService.addAlert(<span class="string">"warnning"</span>,<span class="string">"删除用户失败!"</span>);</div><div class="line">            });</div><div class="line">            <span class="variable">$scope</span>.dtOptions.reloadData();</div><div class="line">        };</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    <span class="variable">$scope</span>.dtOptions = DTOptionsBuilder.newOptions()</div><div class="line">        .withOption(<span class="string">'ajax'</span>, {</div><div class="line">            url: urlBase + <span class="string">'user/page.html'</span>,</div><div class="line">            data: <span class="function"><span class="keyword">function</span><span class="params">(data)</span> </span>{</div><div class="line">                planify(data);</div><div class="line">            }</div><div class="line">        })</div><div class="line">        .withDataProp(<span class="string">'data'</span>)</div><div class="line">        .withOption(<span class="string">'serverSide'</span>, <span class="keyword">true</span>)</div><div class="line">         <span class="comment">//*！重点 绑定derictive必须加上这段，不然，恩，就悲剧了*</span></div><div class="line">        .withOption(<span class="string">'createdRow'</span>, <span class="function"><span class="keyword">function</span><span class="params">(row, data, dataIndex)</span> </span>{           </div><div class="line">             <span class="comment">//Recompiling so we can bind Angular directive to the DT</span></div><div class="line">            <span class="variable">$compile</span>(angular.element(row).contents())(<span class="variable">$scope</span>);</div><div class="line">        })</div><div class="line">        .withPaginationType(<span class="string">'full_numbers'</span>)</div><div class="line">        .withDisplayLength(<span class="number">10</span>)</div><div class="line"><span class="comment">//        .withLanguage({</span></div><div class="line"><span class="comment">//            sUrl: '/path/to/language'</span></div><div class="line"><span class="comment">//        });</span></div><div class="line"></div><div class="line">    <span class="variable">$scope</span>.dtColumns = [</div><div class="line">        DTColumnBuilder.newColumn(<span class="string">"userId"</span>).withTitle(<span class="string">'用户编号'</span>)</div><div class="line">            .renderWith(<span class="function"><span class="keyword">function</span><span class="params">(data, type, full, meta)</span> </span>{</div><div class="line">                <span class="keyword">return</span>  <span class="string">'&lt;a href="#user/'</span>+data+<span class="string">'"&gt; '</span>+ data +<span class="string">'&lt;/a&gt;'</span>;</div><div class="line">            }),</div><div class="line">        DTColumnBuilder.newColumn(<span class="string">"userName"</span>).withTitle(<span class="string">'用户名'</span>).notVisible(),</div><div class="line">        DTColumnBuilder.newColumn(<span class="keyword">null</span>).withTitle(<span class="string">'用户名'</span>)</div><div class="line">            .renderWith(<span class="function"><span class="keyword">function</span><span class="params">(data, type, full, meta)</span> </span>{</div><div class="line">                <span class="keyword">return</span>  <span class="string">'&lt;a href="#user/'</span>+data.userId+<span class="string">'"&gt; '</span>+ data.userName +<span class="string">'&lt;/a&gt;'</span>;</div><div class="line">            }),</div><div class="line">        DTColumnBuilder.newColumn(<span class="string">'realName'</span>).withTitle(<span class="string">'真实姓名'</span>),</div><div class="line">        DTColumnBuilder.newColumn(<span class="string">'mobile'</span>).withTitle(<span class="string">'手机号'</span>),</div><div class="line">        DTColumnBuilder.newColumn(<span class="string">'userPassword'</span>).withTitle(<span class="string">'密码'</span>).notVisible(),</div><div class="line">        DTColumnBuilder.newColumn(<span class="keyword">null</span>).withTitle(<span class="string">'操作'</span>).notSortable()</div><div class="line">            .renderWith(<span class="function"><span class="keyword">function</span><span class="params">(data, type, full, meta)</span> </span>{</div><div class="line">                <span class="keyword">return</span> <span class="string">'&lt;button class="btn btn-warning" ng-click="editInfo('</span> + data.userId + <span class="string">')"&gt;'</span> +</div><div class="line">                    <span class="string">'   &lt;i class="fa fa-edit"&gt;&lt;/i&gt;'</span> +</div><div class="line">                    <span class="string">'基本信息&lt;/button&gt;&nbsp;'</span> +</div><div class="line">                    <span class="string">'&lt;button class="btn btn-danger" ng-click="editAccount('</span> + data.userId + <span class="string">')"&gt;'</span> +</div><div class="line">                    <span class="string">' &lt;i class="fa fa-trash-o"&gt;&lt;/i&gt;'</span> +</div><div class="line">                    <span class="string">'账户信息&lt;/button&gt;&nbsp;'</span> +</div><div class="line">                     <span class="string">'&lt;button class="btn" ng-click="delete('</span> + data.userId + <span class="string">','</span>+data.userName+<span class="string">')"&gt;'</span> +</div><div class="line">                    <span class="string">'删除&lt;/button&gt;&nbsp;'</span> ;</div><div class="line">            })</div><div class="line">    ];</div><div class="line"></div><div class="line">    <span class="comment">//配合后端</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">planify</span><span class="params">(data)</span> </span>{</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.columns.length; i++) {</div><div class="line">            <span class="keyword">var</span> column = data.columns[i];</div><div class="line">            column.searchRegex = column.search.regex;</div><div class="line">            column.searchValue = column.search.value;</div><div class="line">            delete(column.search);</div><div class="line">        }</div><div class="line">    }</div><div class="line">}])</div></pre></td></tr></table></figure>

<h3 id="详细请查看l-lin同学的完整例子：angular-datatables,肯定能找到你想要的~">详细请查看<a href="https://github.com/l-lin" target="_blank" rel="external">l-lin</a>同学的完整例子：<a href="http://l-lin.github.io/angular-datatables/" target="_blank" rel="external">angular-datatables</a>,肯定能找到你想要的~</h3>
]]></content>
    <summary type="html">
    <![CDATA[<p>项目里面绝对少不了的就是列表了。列表就得翻页吧，还得搜索，排序吧。Angular自带了个ng-grid，但我用的是<a href="https://github.com/l-lin" target="_blank" rel="external">l-lin</a>同学写的a]]>
    </summary>
    
      <category term="AngularJS" scheme="http://ristal90.info/tags/AngularJS/"/>
    
      <category term="WEB前端开发" scheme="http://ristal90.info/tags/WEB%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="AngularJS" scheme="http://ristal90.info/categories/AngularJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[angular_cors跨域资源共享设置]]></title>
    <link href="http://ristal90.info/2015/01/28/angular-cors%E8%B7%A8%E5%9F%9F%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB%E8%AE%BE%E7%BD%AE/"/>
    <id>http://ristal90.info/2015/01/28/angular-cors跨域资源共享设置/</id>
    <published>2015-01-28T09:06:51.000Z</published>
    <updated>2015-01-29T10:25:01.000Z</updated>
    <content type="html"><![CDATA[<h2 id="很简单,记下来方便找:">很简单,记下来方便找:</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">配合的是Java后台：</div><div class="line">.config([<span class="string">'$httpProvider'</span>,  </div><div class="line">          <span class="function"><span class="keyword">function</span> ($<span class="title">httpProvider</span>) {  </span></div><div class="line">             <span class="comment"> // Use x-www-form-urlencoded Content-Type 修改Content-Type </span></div><div class="line">              $httpProvider.defaults.headers.<span class="built_in">post</span>[<span class="string">'Content-Type'</span>] = <span class="string">'application/x-www-form-urlencoded'</span>;  </div><div class="line">              $httpProvider.defaults.headers.<span class="built_in">put</span>[<span class="string">'Content-Type'</span>] = <span class="string">'application/x-www-form-urlencoded'</span>;  </div><div class="line">  </div><div class="line">  </div><div class="line">             <span class="comment"> // Override $http service's default transformRequest  </span></div><div class="line">              $httpProvider.defaults.transformRequest = [<span class="function"><span class="keyword">function</span>(<span class="title">data</span>)  </span></div><div class="line">              {  </div><div class="line">                  <span class="comment">/** </span></div><div class="line">                   * The workhorse; converts an object to x-www-form-urlencoded serialization. </div><div class="line">                   * @param {Object} obj </div><div class="line">                   * @return {String} </div><div class="line">                   */  </div><div class="line">                  var <span class="built_in">param</span> = <span class="function"><span class="keyword">function</span>(<span class="title">obj</span>)  </span></div><div class="line">                  {  </div><div class="line">                      var query = <span class="string">''</span>;  </div><div class="line">                      var name, <span class="built_in">value</span>, fullSubName, subName, subValue, innerObj, i;  </div><div class="line">                      console.<span class="built_in">log</span>(obj);  </div><div class="line">  </div><div class="line">  </div><div class="line">                      <span class="keyword">for</span>(name <span class="operator">in</span> obj)  </div><div class="line">                      {  </div><div class="line">                          <span class="built_in">value</span> = obj[name];  </div><div class="line">                          console.<span class="built_in">log</span>(<span class="built_in">value</span>);  </div><div class="line">  </div><div class="line">  </div><div class="line">                          <span class="keyword">if</span>(<span class="built_in">value</span> instanceof Array) <span class="comment"> //数组处理</span></div><div class="line">                          {  </div><div class="line">                              console.<span class="built_in">log</span>(<span class="string">"Array"</span>);  </div><div class="line">                              <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="built_in">value</span>.<span class="built_in">length</span>; ++i)  </div><div class="line">                              {  </div><div class="line">                                  subValue = <span class="built_in">value</span>[i];  </div><div class="line">                                  fullSubName = name + <span class="string">'['</span> + i + <span class="string">']'</span>;  </div><div class="line">                                  innerObj = {};  </div><div class="line">                                  innerObj[fullSubName] = subValue;  </div><div class="line">                                  query += <span class="built_in">param</span>(innerObj) + <span class="string">'&'</span>;  </div><div class="line">                              }  </div><div class="line">                          }  </div><div class="line">                          <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">value</span> instanceof Object) <span class="comment"> //对象处理</span></div><div class="line">                          {  </div><div class="line">                               console.<span class="built_in">log</span>(<span class="string">"object"</span>);  </div><div class="line">                              <span class="keyword">for</span>(subName <span class="operator">in</span> <span class="built_in">value</span>)  </div><div class="line">                              {  </div><div class="line">  </div><div class="line">  </div><div class="line">                                  subValue = <span class="built_in">value</span>[subName];  </div><div class="line">                                  <span class="keyword">if</span>(subValue != <span class="constant">null</span>){  </div><div class="line">                                     <span class="comment"> // fullSubName = name + '[' + subName + ']';  </span></div><div class="line">                                     <span class="comment"> //user.userName = hmm & user.userPassword = 111  </span></div><div class="line">                                      fullSubName = name + <span class="string">'.'</span> + subName; <span class="comment"> //配合后台自行修改</span></div><div class="line">                                     <span class="comment"> // fullSubName =  subName;  </span></div><div class="line">                                      innerObj = {};  </div><div class="line">                                      innerObj[fullSubName] = subValue;  </div><div class="line">                                      query += <span class="built_in">param</span>(innerObj) + <span class="string">'&'</span>;  </div><div class="line">                                  }  </div><div class="line">                              }  </div><div class="line">                          }  </div><div class="line">                          <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">value</span> !== undefined )<span class="comment"> //&& value !== null  </span></div><div class="line">                          {  </div><div class="line">                              console.<span class="built_in">log</span>(<span class="string">"undefined"</span>);  </div><div class="line">                              query += encodeURIComponent(name) + <span class="string">'='</span> + encodeURIComponent(<span class="built_in">value</span>) + <span class="string">'&'</span>;  </div><div class="line">                          }  </div><div class="line">                      }  </div><div class="line">  </div><div class="line">  </div><div class="line">                      <span class="constant">return</span> query.<span class="built_in">length</span> ? query.substr(<span class="number">0</span>, query.<span class="built_in">length</span> - <span class="number">1</span>) : query;  </div><div class="line">                  };  </div><div class="line">  </div><div class="line">  </div><div class="line">                  <span class="constant">return</span> angular.isObject(data) && String(data) !== <span class="string">'[object File]'</span> ? <span class="built_in">param</span>(data) : data;  </div><div class="line">              }]  </div><div class="line">  </div><div class="line">  </div><div class="line">              $httpProvider.defaults.useXDomain = <span class="constant">true</span>; <span class="comment"> //！！！这句是跨域的关键</span></div><div class="line">             <span class="comment"> // delete $httpProvider.defaults.headers.common['X-Requested-With'];  </span></div><div class="line">          }])</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h2 id="很简单,记下来方便找:">很简单,记下来方便找:</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line]]>
    </summary>
    
      <category term="AngularJS" scheme="http://ristal90.info/tags/AngularJS/"/>
    
      <category term="WEB前端" scheme="http://ristal90.info/tags/WEB%E5%89%8D%E7%AB%AF/"/>
    
      <category term="AngularJS" scheme="http://ristal90.info/categories/AngularJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ui-router使用]]></title>
    <link href="http://ristal90.info/2015/01/28/ui-router%E4%BD%BF%E7%94%A8/"/>
    <id>http://ristal90.info/2015/01/28/ui-router使用/</id>
    <published>2015-01-28T08:31:12.000Z</published>
    <updated>2015-01-29T10:25:23.000Z</updated>
    <content type="html"><![CDATA[<p> AngularJS本身也提供router模块，但还是不如Angular-UI提供的ui-router好用。</p>
<p> 最好用的当然就是嵌套作用域啦，实际复杂点的项目都会用到，属于用上了就不想换的。</p>
<p> ui-router只关注状态。一个状态对应一个页面位置</p>
<h2 id="最常用的形式">最常用的形式</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- in index.html --&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">ui-view</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">// <span class="keyword">in</span> app.js </div><div class="line"><span class="variable">$stateProvider</span>.state(<span class="string">'contacts'</span>, {</div><div class="line">   templateUrl: <span class="string">'contacts.html'</span>,</div><div class="line">   controller: <span class="string">'ContactsCtrl'</span></div><div class="line">   </div><div class="line">})</div></pre></td></tr></table></figure>

<h2 id="重点_模板将被插入到哪里？">重点 模板将被插入到哪里？</h2>
<p>状态被激活时，它的模板会自动插入到<strong>父状态</strong>对应的模板中包含ui-view属性的元素内部。如果是顶层的状态，那么它的父模板就是index.html。</p>
<h2 id="激活状态的三种方式">激活状态的三种方式</h2>
<blockquote>
<ul>
<li>调用$state.go()方法，这是一个高级的便利方法；JS中最好用 </li>
</ul>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">不带参数：</div><div class="line"><span class="variable">$state</span>.go(<span class="string">'contacts.details'</span>）;</div><div class="line">带参数:</div><div class="line"> <span class="variable">$state</span>.go(<span class="string">'contacts.details'</span>, { contactId: randId });</div></pre></td></tr></table></figure>

<blockquote>
<ul>
<li>点击包含ui-sref指令的链接；</li>
</ul>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">不带参数：</div><div class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">ui-sref</span>=<span class="value">"contacts.detail"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span></div><div class="line">带参数：</div><div class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">ui-sref</span>=<span class="value">"contacts.detail({contactId:contact.id})"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span></div></pre></td></tr></table></figure>

<blockquote>
<ul>
<li>导航到与状态相关联的 url</li>
</ul>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">不带参数：</div><div class="line">&lt;<span class="operator">a</span> href = <span class="string">"contacts"</span>&gt;&lt;/<span class="operator">a</span>&gt;</div><div class="line">带参数：</div><div class="line">&lt;<span class="operator">a</span> href = <span class="string">"contacts/{contact.id}"</span>&gt;&lt;/<span class="operator">a</span>&gt;</div></pre></td></tr></table></figure>


<h2 id="状态嵌套">状态嵌套</h2>
<p>  当然，以上是最简单的情况啦。如果都这么简单完全没必要用ui-router啦。最经常用到的就是状态嵌套，我用的是点标记法，最直观最清楚</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$stateProvider</span></div><div class="line">  .<span class="keyword">state</span>(<span class="string">'contacts'</span>, {})</div><div class="line">  .<span class="keyword">state</span>(<span class="string">'contacts.item'</span>, {</div><div class="line">                  url:<span class="string">'item/:itemId'</span>,</div><div class="line">                  templateUrl: <span class="string">'item.html'</span>,</div><div class="line">                  controller:<span class="string">'ItemCtrl'</span></div><div class="line">              })</div></pre></td></tr></table></figure>

<h2 id="参数获取">参数获取</h2>
<p>参数itemId可以在ItemCtrl中通过<strong>$stateParams</strong>获取</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">.controller(<span class="string">'ItemCtrl'</span>,[<span class="string">'$rootScope'</span>,<span class="string">'$scope'</span>,<span class="string">'$stateParams'</span>, <span class="string">'itemFactory'</span>,<span class="function"><span class="keyword">function</span> <span class="params">(<span class="variable">$rootScope</span>, <span class="variable">$scope</span>,<span class="variable">$stateParams</span>,projectFactory)</span> </span>{</div><div class="line"></div><div class="line">       <span class="variable">$scope</span>.item;</div><div class="line">       getItem(<span class="variable">$stateParams</span>.itemId);</div><div class="line"></div><div class="line">       <span class="function"><span class="keyword">function</span> <span class="title">getItem</span><span class="params">(itemId)</span></span>{</div><div class="line">           itemFactory.getItem(itemId)</div><div class="line">               .success(<span class="function"><span class="keyword">function</span> <span class="params">(item)</span> </span>{</div><div class="line">                   <span class="variable">$scope</span>.item = item;</div><div class="line">               })</div><div class="line">               .error(<span class="function"><span class="keyword">function</span><span class="params">(error)</span> </span>{</div><div class="line">                   <span class="variable">$scope</span>.status = <span class="string">'Unable to get item: '</span> + error.message;</div><div class="line">               });</div><div class="line">       }</div><div class="line">   }])</div></pre></td></tr></table></figure>

<p><strong>详细请参考:</strong><a href="http://bubkoo.com/2014/01/02/angular/ui-router/guide/index/" target="_blank" rel="external">ui-router 系列文章索引</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p> AngularJS本身也提供router模块，但还是不如Angular-UI提供的ui-router好用。</p>
<p> 最好用的当然就是嵌套作用域啦，实际复杂点的项目都会用到，属于用上了就不想换的。</p>
<p> ui-router只关注状态。一个状态对应一个页面位]]>
    </summary>
    
      <category term="AngularJS" scheme="http://ristal90.info/tags/AngularJS/"/>
    
      <category term="WEB前端" scheme="http://ristal90.info/tags/WEB%E5%89%8D%E7%AB%AF/"/>
    
      <category term="AngularJS" scheme="http://ristal90.info/categories/AngularJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AboutMe]]></title>
    <link href="http://ristal90.info/2015/01/28/AboutMe/"/>
    <id>http://ristal90.info/2015/01/28/AboutMe/</id>
    <published>2015-01-28T08:23:51.000Z</published>
    <updated>2015-01-28T08:24:26.000Z</updated>
    <content type="html"><![CDATA[<h3 id="关于我，身不高体不重">关于我，身不高体不重</h3>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="关于我，身不高体不重">关于我，身不高体不重</h3>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[偷得浮生数月闲之一个人的西塘]]></title>
    <link href="http://ristal90.info/2015/01/28/%E5%81%B7%E5%BE%97%E6%B5%AE%E7%94%9F%E6%95%B0%E6%9C%88%E9%97%B2%E4%B9%8B%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E8%A5%BF%E5%A1%98-1/"/>
    <id>http://ristal90.info/2015/01/28/偷得浮生数月闲之一个人的西塘-1/</id>
    <published>2015-01-28T08:22:29.000Z</published>
    <updated>2015-01-28T08:23:12.000Z</updated>
    <content type="html"><![CDATA[<h2 id="没人陪一个人去的">没人陪一个人去的</h2>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="没人陪一个人去的">没人陪一个人去的</h2>
]]>
    </summary>
    
      <category term="汉服" scheme="http://ristal90.info/tags/%E6%B1%89%E6%9C%8D/"/>
    
      <category term="传统文化" scheme="http://ristal90.info/tags/%E4%BC%A0%E7%BB%9F%E6%96%87%E5%8C%96/"/>
    
      <category term="汉服生活" scheme="http://ristal90.info/categories/%E6%B1%89%E6%9C%8D%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[偷得浮生数月闲之横店三人行]]></title>
    <link href="http://ristal90.info/2015/01/28/%E5%81%B7%E5%BE%97%E6%B5%AE%E7%94%9F%E6%95%B0%E6%9C%88%E9%97%B2%E4%B9%8B%E6%A8%AA%E5%BA%97%E4%B8%89%E4%BA%BA%E8%A1%8C-1/"/>
    <id>http://ristal90.info/2015/01/28/偷得浮生数月闲之横店三人行-1/</id>
    <published>2015-01-28T08:17:07.000Z</published>
    <updated>2015-01-28T08:17:50.000Z</updated>
    <content type="html"><![CDATA[<h2 id="说好的横店">说好的横店</h2>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="说好的横店">说好的横店</h2>
]]>
    </summary>
    
      <category term="汉服" scheme="http://ristal90.info/tags/%E6%B1%89%E6%9C%8D/"/>
    
      <category term="传统文化" scheme="http://ristal90.info/tags/%E4%BC%A0%E7%BB%9F%E6%96%87%E5%8C%96/"/>
    
      <category term="汉服生活" scheme="http://ristal90.info/categories/%E6%B1%89%E6%9C%8D%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AngularJS学习总结]]></title>
    <link href="http://ristal90.info/2015/01/28/AngularJS%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://ristal90.info/2015/01/28/AngularJS学习总结/</id>
    <published>2015-01-28T07:48:27.000Z</published>
    <updated>2015-01-29T10:25:13.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<ul>
<li><a href="http://ristal90.info/2015/01/28/ui-router%E4%BD%BF%E7%94%A8/" target="_blank" rel="external">ui-router状态</a></li>
<li><a href="http://blog.fens.me" target="_blank" rel="external">restful api</a></li>
<li><a href="http://blog.fens.me" target="_blank" rel="external">angular cors跨域资源共享设置 和formdata设置</a></li>
<li><a href="http://blog.fens.me" target="_blank" rel="external">angular-datatables</a></li>
<li><a href="http://www.cnblogs.com/wbpmrck/p/Unit-Test-With-WebStorm-Karma-Jasmine-BDD-TDD.html" target="_blank" rel="external">在WebStorm中集成Karma+jasmine进行前端单元测试</a></li>
</ul>
</blockquote>
<h3 id="AngularJS断断续续也用了差不多1年了，做项目大大小小也做了几个，真心觉得还是不错哒，完爆以前的前端工作方式了。">AngularJS断断续续也用了差不多1年了，做项目大大小小也做了几个，真心觉得还是不错哒，完爆以前的前端工作方式了。</h3>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<ul>
<li><a href="http://ristal90.info/2015/01/28/ui-router%E4%BD%BF%E7%94%A8/" target="_blank" rel="external">ui-router状态</a><]]>
    </summary>
    
      <category term="AngularJS" scheme="http://ristal90.info/tags/AngularJS/"/>
    
      <category term="WEB前端" scheme="http://ristal90.info/tags/WEB%E5%89%8D%E7%AB%AF/"/>
    
      <category term="AngularJS" scheme="http://ristal90.info/categories/AngularJS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodejs异步编程]]></title>
    <link href="http://ristal90.info/2015/01/27/nodejs%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/"/>
    <id>http://ristal90.info/2015/01/27/nodejs异步编程/</id>
    <published>2015-01-27T07:44:47.000Z</published>
    <updated>2015-01-28T03:08:58.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    <summary type="html">
    <![CDATA[]]>
    </summary>
    
      <category term="nodejs" scheme="http://ristal90.info/tags/nodejs/"/>
    
      <category term="nodejs" scheme="http://ristal90.info/categories/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[新的开始]]></title>
    <link href="http://ristal90.info/2015/01/23/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
    <id>http://ristal90.info/2015/01/23/新的开始/</id>
    <published>2015-01-23T09:36:34.000Z</published>
    <updated>2015-01-28T07:54:52.000Z</updated>
    <content type="html"><![CDATA[<p>这是<strong>新的开始</strong>，我用hexo创建了第一篇文章。</p>
<p>通过下面的命令，就可以创建新文章</p>
<figure class="highlight {bash}"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">D:<span class="command">\workspace</span><span class="command">\javascript</span><span class="command">\mynodejs</span>-hexo&gt;hexo new 新的开始</div><div class="line"><span class="special">[</span>info<span class="special">]</span> File created at D:<span class="command">\workspace</span><span class="command">\javascript</span><span class="command">\mynodejs</span>-hexo<span class="command">\source</span><span class="command">\_</span>posts<span class="command">\新</span>的开始.md</div></pre></td></tr></table></figure>

<p>感觉非常好。</p>
<h2 id="引用">引用</h2>
<blockquote>

<p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="external">Welcome to Island Marketing</a></cite></footer></blockquote>


<h2 id="代码块">代码块</h2>
<figure class="highlight"><figcaption><span>.compact</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="keyword">false</span>, <span class="number">2</span>, ‘’, <span class="number">3</span>]);</div><div class="line"><span class="output"><span class="status">=&gt;</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span></div></pre></td></tr></table></figure>

<h2 id="链接">链接</h2>
<a href="http://blog.fens.me" title="粉丝日志" target="_blank">粉丝日志</a>

<h2 id="图片">图片</h2>
<img src="/images/fens.me.png" width="400" height="600" title="这是一张图片">]]></content>
    <summary type="html">
    <![CDATA[<p>这是<strong>新的开始</strong>，我用hexo创建了第一篇文章。</p>
<p>通过下面的命令，就可以创建新文章</p>
<figure class="highlight {bash}"><table><tr><td class="gutter"><pre><]]>
    </summary>
    
      <category term="开始" scheme="http://ristal90.info/tags/%E5%BC%80%E5%A7%8B/"/>
    
      <category term="我" scheme="http://ristal90.info/tags/%E6%88%91/"/>
    
      <category term="日记" scheme="http://ristal90.info/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="日志" scheme="http://ristal90.info/categories/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://ristal90.info/2015/01/23/hello-world/"/>
    <id>http://ristal90.info/2015/01/23/hello-world/</id>
    <published>2015-01-23T09:26:34.000Z</published>
    <updated>2015-01-23T10:34:57.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2>
<h3 id="Create_a_new_post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[js作用域及作用域链]]></title>
    <link href="http://ristal90.info/2014/08/30/js%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%8F%8A%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE/"/>
    <id>http://ristal90.info/2014/08/30/js作用域及作用域链/</id>
    <published>2014-08-30T10:11:32.000Z</published>
    <updated>2015-01-30T10:19:03.000Z</updated>
    <content type="html"><![CDATA[<h2 id="函数作用域">函数作用域</h2>
<p>所谓函数作用域就是说：-》变量在声明它们的函数体以及这个函数体嵌套的任意函数体内都是有定义的。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> scope=<span class="string">"global"</span>;    </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">t</span><span class="params">()</span></span>{    </div><div class="line">    <span class="built_in">console</span>.log(scope);    </div><div class="line">    <span class="keyword">var</span> scope=<span class="string">"local"</span>    </div><div class="line">    <span class="built_in">console</span>.log(scope);    </div><div class="line">}    </div><div class="line">t();</div></pre></td></tr></table></figure>

<p>第一句输出的是： “undefined”，而不是 “global”，因为js采用函数作用域,scope在函数t中重新声明了，则在整个函数t中都有效，覆盖了全局的声明，但第一句时还未赋值，所以是undefined<br>第二句输出的是：”local”<br>等价代码：这样看最清楚</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> scope=<span class="string">"global"</span>;    </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">t</span><span class="params">()</span></span>{    </div><div class="line">    <span class="keyword">var</span> scope;    </div><div class="line">    <span class="built_in">console</span>.log(scope);    </div><div class="line">    scope=<span class="string">"local"</span>    </div><div class="line">    <span class="built_in">console</span>.log(scope);    </div><div class="line">}    </div><div class="line">t();</div></pre></td></tr></table></figure>

<h2 id="变量作用域">变量作用域</h2>
<p>Js中没有用var声明的变量都是全局变量，而且是顶层对象的属性。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">t</span><span class="params">(flag)</span></span>{  </div><div class="line">    <span class="keyword">if</span>(flag){  </div><div class="line">        s=<span class="string">"ifscope"</span>;  </div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)   </div><div class="line">            ;  </div><div class="line">    }  </div><div class="line">    <span class="built_in">console</span>.log(i);  </div><div class="line">}  </div><div class="line">t(<span class="literal">true</span>);  </div><div class="line"><span class="built_in">console</span>.log(s);</div></pre></td></tr></table></figure>

<p>会输出：”ifscope”，用console.log(window.s)也是会输出“ifscope”<br>当使用var声明一个变量时，创建的这个属性是不可配置的，也就是说无法通过delete运算符删除</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="reserved">var</span> name=<span class="number">1</span><span class="function">    -&gt;</span>不可删除</div><div class="line">sex=”girl“<span class="function">         -&gt;</span>可删除</div><div class="line"><span class="keyword">this</span>.age=<span class="number">22</span><span class="function">    -&gt;</span>可删除</div></pre></td></tr></table></figure>

<h2 id="作用域链">作用域链</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">name=<span class="string">"lwy"</span>;    </div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">t</span><span class="params">()</span></span>{    </div><div class="line">    <span class="keyword">var</span> name=<span class="string">"tlwy"</span>;    </div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">s</span><span class="params">()</span></span>{    </div><div class="line">        <span class="keyword">var</span> name=<span class="string">"slwy"</span>;    </div><div class="line">        <span class="built_in">console</span>.log(name);    </div><div class="line">    }    </div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ss</span><span class="params">()</span></span>{    </div><div class="line">        <span class="built_in">console</span>.log(name);    </div><div class="line">    }    </div><div class="line">    s();    </div><div class="line">    ss();    </div><div class="line">}    </div><div class="line">t();</div></pre></td></tr></table></figure>

<p>结果：slwy tlwy<br>当执行s时，s() -&gt;t()-&gt;window 将创建函数s的执行环境(调用对象),并将该对象置于链表开头，然后将函数t的调用对象链接在之后，最后是全局对象。然后从链表开头寻找变量name,很明显name是”slwy”。<br>但执行ss()时，作用域链是： ss()-&gt;t()-&gt;window,所以name是”tlwy”</p>
<h3 id="很容易错的例子：">很容易错的例子：</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript">    </span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">buttonInit</span><span class="params">()</span></span>{    </div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;<span class="number">4</span>;i++){    </div><div class="line">        <span class="keyword">var</span> b=<span class="built_in">document</span>.getElementById(<span class="string">"button"</span>+i);    </div><div class="line">        b.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>{ alert(<span class="string">"Button"</span>+i);},<span class="literal">false</span>);    </div><div class="line">    }    </div><div class="line">}    </div><div class="line"><span class="built_in">window</span>.onload=buttonInit;    </div><div class="line"><span class="tag">&lt;/<span class="title">script</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;<span class="title">button</span> <span class="attribute">id</span>=<span class="value">"button1"</span>&gt;</span>Button1<span class="tag">&lt;/<span class="title">button</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;<span class="title">button</span> <span class="attribute">id</span>=<span class="value">"button2"</span>&gt;</span>Button2<span class="tag">&lt;/<span class="title">button</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;<span class="title">button</span> <span class="attribute">id</span>=<span class="value">"button3"</span>&gt;</span>Button3<span class="tag">&lt;/<span class="title">button</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></div></pre></td></tr></table></figure>

<p>当文档加载完毕，给几个按钮注册点击事件，当我们点击按钮时，会弹出什么提示框呢？<br>很容易犯错，三个按钮都是弹出：”Button4”,你答对了吗？<br>当注册事件结束后，i的值为4，当点击按钮时，事件函数即function(){ alert(“Button”+i);}这个匿名函数中没有i,根据作用域链，所以到buttonInit函数中找，此时i的值为4，所以弹出”button4“。  </p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="函数作用域">函数作用域</h2>
<p>所谓函数作用域就是说：-》变量在声明它们的函数体以及这个函数体嵌套的任意函数体内都是有定义的。</p>
<figure class="highlight"><table><tr><td class="gutter"><pr]]>
    </summary>
    
      <category term="JavaScript" scheme="http://ristal90.info/tags/JavaScript/"/>
    
      <category term="WEB前端" scheme="http://ristal90.info/tags/WEB%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://ristal90.info/categories/JavaScript/"/>
    
  </entry>
  
</feed>
